{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shalini/portkey/frontend/components/PanoramaViewer.tsx"],"sourcesContent":["\"use client\";\nimport { Canvas, useLoader, useThree } from '@react-three/fiber';\nimport { TextureLoader, DoubleSide, Vector3 } from 'three';\nimport { OrbitControls, Html } from '@react-three/drei';\nimport { Suspense, useEffect } from 'react';\nimport * as THREE from 'three';\n\ninterface Props {\n  src: string;\n  isLoading?: boolean;\n}\n\nfunction Sphere({ src }: { src: string }) {\n  const texture = useLoader(TextureLoader, src);\n\n  return (\n    <mesh scale={[-1, 1, 1]}>\n      <sphereGeometry args={[500, 32, 16]} />\n      <meshBasicMaterial \n        map={texture} \n        side={DoubleSide}\n      />\n    </mesh>\n  );\n}\n\nfunction LoadingFallback() {\n  return (\n    <Html center>\n      <div className=\"text-gray-600 text-center\">\n        <div className=\"w-8 h-8 border-2 border-gray-400 border-t-transparent rounded-full animate-spin mx-auto mb-2\"></div>\n        <p>Loading panorama...</p>\n      </div>\n    </Html>\n  );\n}\n\nfunction CameraController() {\n  const { camera } = useThree();\n  \n  useEffect(() => {\n    camera.position.set(0, 0, 0.1);\n    camera.lookAt(new Vector3(0, 0, 0));\n  }, [camera]);\n\n  return null;\n}\n\nexport default function PanoramaViewer({ src, isLoading }: Props) {\n  if (!src) return null;\n\n  return (\n    <Canvas \n      camera={{ \n        fov: 75, \n        position: [0, 0, 0.1],\n        near: 0.1,\n        far: 1000\n      }}\n      gl={{ \n        antialias: true,\n        alpha: false,\n        powerPreference: \"high-performance\"\n      }}\n    >\n      <CameraController />\n      \n      <Suspense fallback={<LoadingFallback />}>\n        <Sphere src={src} />\n      </Suspense>\n      \n      <OrbitControls \n        enableZoom={true}\n        enablePan={false}\n        enableDamping={true}\n        dampingFactor={0.05}\n        rotateSpeed={0.5}\n        minDistance={0.1}\n        maxDistance={1000}\n        maxPolarAngle={Math.PI}\n        minPolarAngle={0}\n        target={[0, 0, 0]}\n      />\n    </Canvas>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;AAJA;;;;;AAYA,SAAS,OAAO,KAAwB;QAAxB,EAAE,GAAG,EAAmB,GAAxB;;IACd,MAAM,UAAU,CAAA,GAAA,mNAAA,CAAA,YAAS,AAAD,EAAE,kJAAA,CAAA,gBAAa,EAAE;IAEzC,qBACE,6LAAC;QAAK,OAAO;YAAC,CAAC;YAAG;YAAG;SAAE;;0BACrB,6LAAC;gBAAe,MAAM;oBAAC;oBAAK;oBAAI;iBAAG;;;;;;0BACnC,6LAAC;gBACC,KAAK;gBACL,MAAM,kJAAA,CAAA,aAAU;;;;;;;;;;;;AAIxB;GAZS;;QACS,mNAAA,CAAA,YAAS;;;KADlB;AAcT,SAAS;IACP,qBACE,6LAAC,0JAAA,CAAA,OAAI;QAAC,MAAM;kBACV,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;;;;;8BACf,6LAAC;8BAAE;;;;;;;;;;;;;;;;;AAIX;MATS;AAWT,SAAS;;IACP,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,kNAAA,CAAA,WAAQ,AAAD;IAE1B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG;YAC1B,OAAO,MAAM,CAAC,IAAI,kJAAA,CAAA,UAAO,CAAC,GAAG,GAAG;QAClC;qCAAG;QAAC;KAAO;IAEX,OAAO;AACT;IATS;;QACY,kNAAA,CAAA,WAAQ;;;MADpB;AAWM,SAAS,eAAe,KAAyB;QAAzB,EAAE,GAAG,EAAE,SAAS,EAAS,GAAzB;IACrC,IAAI,CAAC,KAAK,OAAO;IAEjB,qBACE,6LAAC,sMAAA,CAAA,SAAM;QACL,QAAQ;YACN,KAAK;YACL,UAAU;gBAAC;gBAAG;gBAAG;aAAI;YACrB,MAAM;YACN,KAAK;QACP;QACA,IAAI;YACF,WAAW;YACX,OAAO;YACP,iBAAiB;QACnB;;0BAEA,6LAAC;;;;;0BAED,6LAAC,6JAAA,CAAA,WAAQ;gBAAC,wBAAU,6LAAC;;;;;0BACnB,cAAA,6LAAC;oBAAO,KAAK;;;;;;;;;;;0BAGf,6LAAC,oKAAA,CAAA,gBAAa;gBACZ,YAAY;gBACZ,WAAW;gBACX,eAAe;gBACf,eAAe;gBACf,aAAa;gBACb,aAAa;gBACb,aAAa;gBACb,eAAe,KAAK,EAAE;gBACtB,eAAe;gBACf,QAAQ;oBAAC;oBAAG;oBAAG;iBAAE;;;;;;;;;;;;AAIzB;MArCwB","debugId":null}}]
}